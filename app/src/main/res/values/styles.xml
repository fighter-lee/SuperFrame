<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="MyThemeBlue"/>

    <!-- 我们以蓝色为主色调 -->
    <style name="MyThemeBlue" parent="Theme.AppCompat.Light.NoActionBar">

        <!--选中状态icon的颜色和字体颜色-->
        <item name="colorPrimary">@color/blue</item>
        <item name="colorPrimaryDark">@color/blue</item>
        <item name="colorAccent">@color/blue</item>
        <!--正常状态下字体颜色和icon颜色-->
        <!--<item name="android:textColorPrimary">@color/colorTheme</item>-->
    </style>


    <!--控制头部据appbar的样式-->
    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/>

    <!--用于控制toolbar溢出菜单的样式-->
    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light"/>

    <style name="TabLayoutTextStyle" parent="TextAppearance.Design.Tab">
        <item name="textAllCaps">false</item>
    </style>

    <style name="Toolbar.Dark" parent="ThemeOverlay.AppCompat.Dark.ActionBar">
        <item name="android:textColor">@android:color/white</item>
        <item name="titleTextColor">@android:color/white</item>
        <item name="colorControlNormal">@android:color/white</item>
        <item name="contentInsetStart">0dp</item>
        <item name="contentInsetStartWithNavigation">0dp</item>
    </style>

    <style name="ToolbarPopupTheme" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:popupBackground">@color/colorPrimary</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">5dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0dp</item>
        <item name="android:colorBackground">@android:color/white</item>
        <item name="android:textColor">@android:color/black</item>
    </style>

</resources>
